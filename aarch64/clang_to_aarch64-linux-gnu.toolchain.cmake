macro(set_if_file_exists VARIABLE_NAME VARIABLE_PATH)
  if(NOT EXISTS ${VARIABLE_PATH})
    message(FATAL_ERROR "${VARIABLE_PATH} does not exist")
  endif()
  set(${VARIABLE_NAME} ${VARIABLE_PATH})
  #set(${VARIABLE_NAME} ${VARIABLE_PATH} PARENT_SCOPE)
endmacro()

SET(CMAKE_SYSTEM_NAME Linux)
SET(CMAKE_SYSTEM_PROCESSOR aarch64)

SET(PATH_TO_TOOLCHAIN_BASE "${CMAKE_CURRENT_SOURCE_DIR}/aarch64/gcc-arm-11.2-2022.02-x86_64-aarch64-none-linux-gnu")
SET(PATH_TO_COMPILER_BINARIES /usr/bin)
SET(CLANG_VERSION_SUFFIX "-18")

#set_if_file_exists(CMAKE_ADDR2LINE "${PATH_TO_COMPILER_BINARIES}/aarch64-none-linux-gnu-addr2line${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_AR "${PATH_TO_COMPILER_BINARIES}/llvm-ar${CLANG_VERSION_SUFFIX}")
#set_if_file_exists(CMAKE_ASM_COMPILER "${PATH_TO_COMPILER_BINARIES}/aarch64-none-linux-gnu-as${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_C_COMPILER "${PATH_TO_COMPILER_BINARIES}/clang${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_CXX_COMPILER "${PATH_TO_COMPILER_BINARIES}/clang++${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_CXX_COMPILER_AR "${PATH_TO_COMPILER_BINARIES}/llvm-ar${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_CXX_COMPILER_RANLIB "${PATH_TO_COMPILER_BINARIES}/llvm-ranlib${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_C_COMPILER_AR "${PATH_TO_COMPILER_BINARIES}/llvm-ar${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_C_COMPILER_RANLIB "${PATH_TO_COMPILER_BINARIES}/llvm-ranlib${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_LINKER "${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_NM "${PATH_TO_COMPILER_BINARIES}/llvm-nm${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_OBJCOPY "${PATH_TO_COMPILER_BINARIES}/llvm-objcopy${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_OBJDUMP "${PATH_TO_COMPILER_BINARIES}/llvm-objdump${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_RANLIB "${PATH_TO_COMPILER_BINARIES}/llvm-ranlib${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_READELF "${PATH_TO_COMPILER_BINARIES}/llvm-readelf${CLANG_VERSION_SUFFIX}")
set_if_file_exists(CMAKE_STRIP "${PATH_TO_COMPILER_BINARIES}/llvm-strip${CLANG_VERSION_SUFFIX}")

# Don't look for programs in the sysroot as they are arm binaries
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

SET(CMAKE_SYSROOT ${PATH_TO_TOOLCHAIN_BASE}/aarch64-none-linux-gnu/libc/)

SET(CMAKE_ASM_COMPILER_TARGET aarch64-none-linux-gnu)
SET(CMAKE_C_COMPILER_TARGET aarch64-none-linux-gnu)
SET(CMAKE_CXX_COMPILER_TARGET aarch64-none-linux-gnu)

SET(CMAKE_EXE_LINKER_FLAGS_INIT "-fuse-ld=${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX} -L${PATH_TO_TOOLCHAIN_BASE}/lib/gcc/aarch64-none-linux-gnu/11.2.1")
SET(CMAKE_EXE_LINKER_FLAGS "-fuse-ld=${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX} -L${PATH_TO_TOOLCHAIN_BASE}/lib/gcc/aarch64-none-linux-gnu/11.2.1")
SET(CMAKE_MODULE_LINKER_FLAGS_INIT "-fuse-ld=${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX} -L${PATH_TO_TOOLCHAIN_BASE}/lib/gcc/aarch64-none-linux-gnu/11.2.1")
SET(CMAKE_MODULE_LINKER_FLAGS "-fuse-ld=${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX} -L${PATH_TO_TOOLCHAIN_BASE}/lib/gcc/aarch64-none-linux-gnu/11.2.1")
SET(CMAKE_SHARED_LINKER_FLAGS_INIT "-fuse-ld=${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX} -L${PATH_TO_TOOLCHAIN_BASE}/lib/gcc/aarch64-none-linux-gnu/11.2.1")
SET(CMAKE_SHARED_LINKER_FLAGS "-fuse-ld=${PATH_TO_COMPILER_BINARIES}/ld.lld${CLANG_VERSION_SUFFIX} -L${PATH_TO_TOOLCHAIN_BASE}/lib/gcc/aarch64-none-linux-gnu/11.2.1")
